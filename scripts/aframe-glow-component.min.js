!function(e){function t(i){if(r[i])return r[i].exports;var s=r[i]={exports:{},id:i,loaded:!1};return e[i].call(s.exports,s,s.exports,t),s.loaded=!0,s.exports}var r={};return t.m=e,t.c=r,t.p="",t(0)}([function(e,t){function r(e){for(var t=new THREE.BufferGeometry,r=new n(e.vertices.length,0,THREE.Vector3,Float32Array,3,["x","y","z"]),i=new n(e.faces.length,0,THREE.Face3,Uint32Array,3,["a","b","c"]),s=new n(3*e.faceVertexUvs[0].length*3,0,THREE.Vector2,Float32Array,2,["x","y"]),a=0,o=e.vertices.length;a<o;a++)r.push_element(e.vertices[a]);for(var a=0,o=e.faces.length;a<o;a++)i.push_element(e.faces[a]);for(var a=0,o=e.faceVertexUvs[0].length;a<o;a++)s.push_element(e.faceVertexUvs[0][a][0]),s.push_element(e.faceVertexUvs[0][a][1]),s.push_element(e.faceVertexUvs[0][a][2]);return i.trim_size(),r.trim_size(),s.trim_size(),t.setIndex(new THREE.BufferAttribute(i.buffer,3)),t.addAttribute("position",new THREE.BufferAttribute(r.buffer,3)),t.addAttribute("uv",new THREE.BufferAttribute(s.buffer,2)),t}function i(e){var t=["a","b","c"],r=["x","y","z"],i=new n(0,5,THREE.Vector3,Float32Array,3,r),s=new n(0,3,THREE.Face3,Uint32Array,3,t);i.from_existing(e.getAttribute("position").array);var a=new n(3*i.length,4,THREE.Vector3,Float32Array,3,r),o=new n(i.length,1,function(){this.x=0},Float32Array,1,["x"]);a.length=i.length,s.from_existing(e.index.array);for(var g,l=[0,0,0],f=0,h=s.length;f<h;f++)s.index_to_register(f,0),i.index_to_register(s.register[0].a,0),i.index_to_register(s.register[0].b,1),i.index_to_register(s.register[0].c,2),a.register[0].subVectors(i.register[1],i.register[0]),a.register[1].subVectors(i.register[2],i.register[1]),a.register[0].cross(a.register[1]),g=Math.abs(a.register[0].length()),o.buffer[s.register[0].a]+=g,o.buffer[s.register[0].b]+=g,o.buffer[s.register[0].c]+=g;for(var f=0,h=s.length;f<h;f++)s.index_to_register(f,0),i.index_to_register(s.register[0].a,0),i.index_to_register(s.register[0].b,1),i.index_to_register(s.register[0].c,2),a.register[0].subVectors(i.register[1],i.register[0]),a.register[1].subVectors(i.register[2],i.register[0]),a.register[3].set(0,0,0),a.register[3].x=a.register[0].y*a.register[1].z-a.register[0].z*a.register[1].y,a.register[3].y=a.register[0].z*a.register[1].x-a.register[0].x*a.register[1].z,a.register[3].z=a.register[0].x*a.register[1].y-a.register[0].y*a.register[1].x,a.register[0].cross(a.register[1]),g=Math.abs(a.register[0].length()),l[0]=g/o.buffer[s.register[0].a],l[1]=g/o.buffer[s.register[0].b],l[2]=g/o.buffer[s.register[0].c],a.buffer[3*s.register[0].a+0]+=a.register[3].x*l[0],a.buffer[3*s.register[0].a+1]+=a.register[3].y*l[0],a.buffer[3*s.register[0].a+2]+=a.register[3].z*l[0],a.buffer[3*s.register[0].b+0]+=a.register[3].x*l[1],a.buffer[3*s.register[0].b+1]+=a.register[3].y*l[1],a.buffer[3*s.register[0].b+2]+=a.register[3].z*l[1],a.buffer[3*s.register[0].c+0]+=a.register[3].x*l[2],a.buffer[3*s.register[0].c+1]+=a.register[3].y*l[2],a.buffer[3*s.register[0].c+2]+=a.register[3].z*l[2];a.trim_size(),e.addAttribute("normal",new THREE.BufferAttribute(a.buffer,3))}function s(e){var t=["a","b","c"],r=["x","y","z"],s=["x","y"],a=new n(0,3,THREE.Vector3,Float32Array,3,r),o=new n(0,3,THREE.Face3,Uint32Array,3,t),g=new n(0,3,THREE.Vector2,Float32Array,2,s),l=new n(0,3,THREE.Vector3,Float32Array,3,r);a.from_existing(e.getAttribute("position").array),o.from_existing(e.index.array),g.from_existing(e.getAttribute("uv").array),i(e),l.from_existing(e.getAttribute("normal").array);for(var f=new n(3*o.length,3,THREE.Vector3,Float32Array,3,r),h=new n(3*o.length,3,THREE.Vector3,Float32Array,3,r),u=new n(3*o.length,3,THREE.Vector2,Float32Array,2,s),c=0,d=o.length;c<d;c++)o.index_to_register(c,0),a.index_to_register(o.register[0].a,0),a.index_to_register(o.register[0].b,1),a.index_to_register(o.register[0].c,2),f.push_element(a.register[0]),f.push_element(a.register[1]),f.push_element(a.register[2]),0!==g.length&&(g.index_to_register(3*c+0,0),g.index_to_register(3*c+1,1),g.index_to_register(3*c+2,2),u.push_element(g.register[0]),u.push_element(g.register[1]),u.push_element(g.register[2])),l.index_to_register(o.register[0].a,0),l.index_to_register(o.register[0].b,1),l.index_to_register(o.register[0].c,2),h.push_element(l.register[0]),h.push_element(l.register[1]),h.push_element(l.register[2]);return f.trim_size(),u.trim_size(),h.trim_size(),e.index=null,e.addAttribute("position",new THREE.BufferAttribute(f.buffer,3)),e.addAttribute("normal",new THREE.BufferAttribute(h.buffer,3)),0!==u.length&&e.addAttribute("uv",new THREE.BufferAttribute(u.buffer,2)),e}AFRAME.registerComponent("glow",{schema:{enabled:{default:!0},c:{type:"number",default:1},p:{type:"number",default:1.4},color:{type:"color",default:"#FFFF00"},scale:{type:"number",default:2},side:{type:"string",default:"front"}},init:function(){function e(){return t.el.object3DMap.mesh?r():void t.el.addEventListener("model-loaded",r)}var t=(this.el.sceneEl.object3D,this),r=function(){var e=document.querySelector("[camera]").object3D;t.camera=e;var r=THREE.FrontSide;"back"===t.data.side&&(r=THREE.BackSide),t.glowMaterial=new THREE.ShaderMaterial({uniforms:{c:{type:"f",value:t.data.c},p:{type:"f",value:t.data.p},glowColor:{type:"c",value:new THREE.Color(t.data.color)},viewVector:{type:"v3",value:e.position}},vertexShader:THREE.__GlowShader.vertexShader,fragmentShader:THREE.__GlowShader.fragmentShader,side:r,blending:THREE.AdditiveBlending,transparent:!0});var i=t.el.object3DMap.mesh.geometry.clone();i=(new THREE.Geometry).fromBufferGeometry(i);var s=new THREE.BufferSubdivisionModifier(2);i=s.modify(i),t.glowMesh=new THREE.Mesh(i,t.glowMaterial),t.el.object3D.add(t.glowMesh),t.data.enabled||(t.glowMesh.visible=!1)};return this.el.sceneEl.hasLoaded?e():void this.el.sceneEl.addEventListener("loaded",e)},update:function(){if(this.data.enabled){if(this.glowMesh){this.glowMesh.visible=!0,this.data.c<0&&(this.data.c=0),this.data.c>1&&(this.data.c=1),this.data.p<0&&(this.data.p=0),this.data.p>6&&(this.data.p=6),this.glowMesh.material.uniforms.c.value=this.data.c,this.glowMesh.material.uniforms.p.value=this.data.p,this.glowMesh.material.uniforms.glowColor.value.setHex(this.data.color.replace("#","0x"));var e=THREE.FrontSide;"back"===this.data.side&&(e=THREE.BackSide),this.glowMesh.material.side=e}}else this.glowMesh&&(this.glowMesh.visible=!1)},tick:function(){if(this.glowMesh){if(this.glowMesh.rotation.set(this.el.object3D.rotation.x,this.el.object3D.rotation.y,this.el.object3D.rotation.z),this.glowMesh.scale.set(this.el.object3D.scale.x*this.data.scale,this.el.object3D.scale.y*this.data.scale,this.el.object3D.scale.z*this.data.scale),!this.camera)return;this.glowMesh.material.uniforms.viewVector.value=(new THREE.Vector3).subVectors(this.camera.position,this.glowMesh.position)}},remove:function(){if(this.glowMesh){var e=this.el.sceneEl.object3D;e.remove(this.glowMesh),this.glowMesh=null,this.glowMaterial=null}},pause:function(){},play:function(){}}),THREE.__GlowShader={vertexShader:["uniform vec3 viewVector;","uniform float c;","uniform float p;","varying float intensity;","void main() ","{","vec3 vNormal = normalize( normalMatrix * normal );","vec3 vNormel = normalize( normalMatrix * viewVector );","intensity = pow( c - dot(vNormal, vNormel), p );","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform vec3 glowColor;","varying float intensity;","void main() ","{","vec3 glow = glowColor * intensity;","gl_FragColor = vec4( glow, 1.0 );","}"].join("\n")},THREE.Face3.prototype.set=function(e,t,r){this.a=e,this.b=t,this.c=r};var n=function(e,t,r,i,s,n){this.array_type=i,this.register_type=r,this.unit_size=s,this.accessors=n,this.buffer=new i(e*s),this.register=[],this.length=0,this.real_length=e,this.available_registers=t;for(var a=0;a<t;a++)this.register.push(new r)};n.prototype={constructor:n,index_to_register:function(e,t,r){var i=e*this.unit_size;if(t>=this.available_registers)throw new Error("THREE.BufferSubdivisionModifier: Not enough registers in TypedArrayHelper.");if(e>this.length)throw new Error("THREE.BufferSubdivisionModifier: Index is out of range in TypedArrayHelper.");for(var s=0;s<this.unit_size;s++)this.register[t][this.accessors[s]]=this.buffer[i+s]},resize:function(e){if(0===e&&(e=8),e<this.length)this.buffer=this.buffer.subarray(0,this.length*this.unit_size);else{var t;this.buffer.length<e*this.unit_size?(t=new this.array_type(e*this.unit_size),t.set(this.buffer),this.buffer=t,this.real_length=e):(t=new this.array_type(e*this.unit_size),t.set(this.buffer.subarray(0,this.length*this.unit_size)),this.buffer=t,this.real_length=e)}},from_existing:function(e){var t=e.length;this.buffer=new this.array_type(t),this.buffer.set(e),this.length=e.length/this.unit_size,this.real_length=this.length},push_element:function(e){this.length+1>this.real_length&&this.resize(2*this.real_length);for(var t=this.length*this.unit_size,r=0;r<this.unit_size;r++)this.buffer[t+r]=e[this.accessors[r]];this.length++},trim_size:function(){this.length<this.real_length&&this.resize(this.length)}},THREE.BufferSubdivisionModifier=function(e){this.subdivisions=void 0===e?1:e},THREE.BufferSubdivisionModifier.prototype.modify=function(e){e instanceof THREE.Geometry?(e.mergeVertices(),"undefined"==typeof e.normals&&(e.normals=[]),e=r(e)):e instanceof THREE.BufferGeometry||console.error("THREE.BufferSubdivisionModifier: Geometry is not an instance of THREE.BufferGeometry or THREE.Geometry");for(var t=this.subdivisions;t-- >0;)this.smooth(e);return s(e)};var a=function(e,t){this.a=e,this.b=t,this.faces=[],this.newEdge=null};!function(){function e(e,t,r){var i=Math.min(e,t)+"_"+Math.max(e,t);return r[i]}function t(e,t,r,i,s,n){var o,g=Math.min(e,t),l=Math.max(e,t),f=g+"_"+l;f in i?o=i[f]:(o=new a(g,l),i[f]=o),o.faces.push(s),n[e].edges.push(o),n[t].edges.push(o)}function r(e,r,i,s){var n,a,o;for(n=0,a=e.length;n<a;n++)i[n]={edges:[]};for(n=0,a=r.length;n<a;n++)r.index_to_register(n,0),o=r.register[0],t(o.a,o.b,e,s,n,i),t(o.b,o.c,e,s,n,i),t(o.c,o.a,e,s,n,i)}function i(e,t){e.push_element(t)}function s(e,t){return Math.abs(t-e)/2+Math.min(e,t)}function o(e,t,r,i){e.push_element(t),e.push_element(r),e.push_element(i)}var g=["a","b","c"],l=["x","y","z"],f=["x","y"];THREE.BufferSubdivisionModifier.prototype.smooth=function(t){var a,h,u,c,d,_,b,E,m,y,v,p,x;a=new n(0,3,THREE.Vector3,Float32Array,3,l),h=new n(0,3,THREE.Face3,Uint32Array,3,g),u=new n(0,3,THREE.Vector2,Float32Array,2,f),a.from_existing(t.getAttribute("position").array),h.from_existing(t.index.array),u.from_existing(t.getAttribute("uv").array);var w=!1;"undefined"!=typeof u&&0!==u.length&&(w=!0),p=new Array(a.length),x={},r(a,h,p,x),c=new n(2*t.getAttribute("position").array.length/3,2,THREE.Vector3,Float32Array,3,l);var H,T,R,A,M,z,V,F=c.register[1];for(E in x){for(T=x[E],R=c.register[0],M=3/8,z=1/8,V=T.faces.length,2!==V&&(M=.5,z=0),a.index_to_register(T.a,0),a.index_to_register(T.b,1),R.addVectors(a.register[0],a.register[1]).multiplyScalar(M),F.set(0,0,0),y=0;y<V;y++){for(h.index_to_register(T.faces[y],0),A=h.register[0],v=0;v<3&&(a.index_to_register(A[g[v]],2),H=a.register[2],A[g[v]]===T.a||A[g[v]]===T.b);v++);F.add(H)}F.multiplyScalar(z),R.add(F),T.newEdge=c.length,c.push_element(R)}var S,B,j,D,G,U,C,k=c.length;for(E=0,m=a.length;E<m;E++){for(a.index_to_register(E,0,l),U=a.register[0],G=p[E].edges,b=G.length,3===b?S=3/16:b>3&&(S=3/(8*b)),B=1-b*S,j=S,b<=2&&2===b&&(B=.75,j=1/8),C=U.multiplyScalar(B),F.set(0,0,0),y=0;y<b;y++)D=G[y],H=D.a!==E?D.a:D.b,a.index_to_register(H,1,l),F.add(a.register[1]);F.multiplyScalar(j),C.add(F),c.push_element(C,l)}var N,I,L;d=new n(4*t.index.array.length/3,1,THREE.Face3,Float32Array,3,g),_=new n(4*t.getAttribute("uv").array.length/2,3,THREE.Vector2,Float32Array,2,f);var q=_.register[0],P=_.register[1],J=_.register[2],K=d.register[0];for(E=0,m=h.length;E<m;E++)if(h.index_to_register(E,0),A=h.register[0],N=e(A.a,A.b,x).newEdge,I=e(A.b,A.c,x).newEdge,L=e(A.c,A.a,x).newEdge,K.set(N,I,L),i(d,K),K.set(A.a+k,N,L),i(d,K),K.set(A.b+k,I,N),i(d,K),K.set(A.c+k,L,I),i(d,K),w===!0){u.index_to_register(3*E+0,0),u.index_to_register(3*E+1,1),u.index_to_register(3*E+2,2);var O=u.register[0],Q=u.register[1],W=u.register[2];q.set(s(O.x,Q.x),s(O.y,Q.y)),P.set(s(Q.x,W.x),s(Q.y,W.y)),J.set(s(O.x,W.x),s(O.y,W.y)),o(_,q,P,J),o(_,O,q,J),o(_,Q,P,q),o(_,W,J,P)}d.trim_size(),c.trim_size(),_.trim_size(),t.setIndex(new THREE.BufferAttribute(d.buffer,3)),t.addAttribute("position",new THREE.BufferAttribute(c.buffer,3)),t.addAttribute("uv",new THREE.BufferAttribute(_.buffer,2))}}()}]);